generator client {
   provider = "prisma-client-js"
}

datasource database {
   provider  = "postgresql"
   url       = env("POSTGRES_PRISMA_URL")
   directUrl = env("POSTGRES_PRISMA_NON_POOLING")
}

model User {
   id Int @id @default(autoincrement())

   fullName String
   email    String @unique
   password String

   cart Cart?

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
   order     Order[]
}

model Category {
   id       Int       @id @default(autoincrement())
   name     String    @unique
   products Product[]

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model Product {
   id Int @id @default(autoincrement())

   name     String @unique
   imageUrl String

   category   Category @relation(fields: [categoryId], references: [id])
   categoryId Int

   ingredients Ingredient[]
   // ingredients Ingredient[] @relation(fields: [ingredientsId],references: [id])
   // ingredientsId Int

   createdAt        DateTime           @default(now())
   updatedAt        DateTime           @updatedAt
   productVariation ProductVariation[]
}

model ProductVariation {
   id Int @id @default(autoincrement())

   price     Int
   size      Int?
   pizzaType Int?

   product   Product    @relation(fields: [productId], references: [id])
   productId Int
   cartItem  CartItem[]
}

model Ingredient {
   id Int @id @default(autoincrement())

   name     String @unique
   price    Int
   imageUrl String

   products Product[]
   // products   Product[] @relation(fields: [productsId], references: [id])
   // productsId Int

   createdAt  DateTime  @default(now())
   updatedAt  DateTime  @updatedAt
   cartItem   CartItem? @relation(fields: [cartItemId], references: [id])
   cartItemId Int
}

model Cart {
   id Int @id @default(autoincrement())

   user   User? @relation(fields: [userId], references: [id])
   userId Int   @unique

   token String

   totalAmount Int @default(0)

   createdAt DateTime   @default(now())
   updatedAt DateTime   @updatedAt
   cartItems CartItem[]
}

model CartItem {
   id Int @id @default(autoincrement())

   productVariation   ProductVariation @relation(fields: [productVariationId], references: [id])
   productVariationId Int

   cart   Cart @relation(fields: [cartId], references: [id])
   cartId Int

   quantity Int

   ingredients Ingredient[]

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

enum OrderStatus {
   PENDING
   SUCCEEDED
   CANCELLED
}

model Order {
   id Int @id @default(autoincrement())

   user   User? @relation(fields: [userId], references: [id])
   userId Int?

   token       String
   totalAmount Int
   status      OrderStatus
   paymentId   String?

   items Json

   fullName String
   address  String
   email    String
   phone    String
   comment  String?

   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}
